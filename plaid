#!/bin/bash

# GridPlaid Installation Script.
plaidversion="1.4.2"


# Check OS support
distr=`echo $(lsb_release -i | cut -d':' -f 2)`
osver=`echo $(lsb_release -c | cut -d':' -f 2)`
if ! [[ $distr == "Ubuntu" && $osver =~ ^(xenial|bionic)$ ]]; then
	echo "$(tput setaf 1)"
	echo "****************************************************************************"
	echo "****  This OS is not supported by GridPlaid and could not work properly  ****"
	echo "****************************************************************************"
	echo "$(tput sgr0)"
	read -p "Press [Enter] key to continue..."
fi


# Diplay menu to select type of server
[[ -n "$1" ]] && setup="$1" || setup=9

while ! [[ $setup -ge 0 && $setup -le 4 && $setup =~ ^[0-9]+$ ]] 2>/dev/null
do
	echo ""
	echo "  1 - HTML Server"
	echo "  2 - PHP Server"
	echo "  3 - LEMP Server (Default)"
	echo "  4 - Custom Configuration"
	echo "  0 - Maybe later..."
	echo ""
	read -p "Select the desired option to configure your server: " setup
	echo ""
	echo "------------------------------------------------"
	setup=${setup:-3}
done


# Download and install GridPlaid
if [[ $2 == "-ver="* ]]; then
	ver=$(echo "$2" | cut -d'=' -f 2 -s)	
	# Be sure we have a valid server response for the requested version
	code=$(wget --server-response --spider https://gridpane.com/gridplaid?version=$ver 2>&1 | awk '/^  HTTP/{print $2}')
	# Get the last code (redirections)
	code="${code##*$'\n'}"

	echo "$(tput setaf 1)"
	if [[ $code == 200 ]]; then
		sudo wget --timeout=15 -qrO $HOME/gridplaid.tar https://gridpane.com/gridplaid?version=$ver
		plaidversion="$ver"
		[[ $ver == "beta" ]] && echo "[WARNING] You are installing a BETA version of GridPlaid and it's not recommended for production enviroments."
	else
		echo "[ERROR] Version not found or not available! ($code) $(tput sgr0)"
		exit 1
	fi
	echo $(tput sgr0)
else
	sudo wget --timeout=15 -qrO $HOME/gridplaid.tar https://gridpane.com/gridplaid.tar
fi

[[ ! -d /opt/gridplaid ]] && sudo mkdir /opt/gridplaid
sudo tar -xf $HOME/gridplaid.tar -C /opt/gridplaid
sudo find /opt/gridplaid -type d -exec chmod 755 {} \;
sudo find /opt/gridplaid -type f -exec chmod 644 {} \;

# Install plugins
sudo chmod 755 /opt/gridplaid/plugins/*
sudo mv /opt/gridplaid/plugins/* /usr/bin/

source /opt/gridplaid/lib/install

# Check for uninstalled GridPlaid conf file
[[ -a $HOME/.gridplaid-conf-restore_dont-remove ]] && sudo mv $HOME/.gridplaid-conf-restore_dont-remove /opt/gridplaid/gridplaid.conf

# Save Tools Port after library is available.
if [[ -a /opt/gridplaid/gridplaid.conf ]]; then
	echo "${gre}GridPlaid Configuration file was found, so we will use it!${end}"
else
	[[ -n $2 && $2 != "-ver="* ]] && tools_port $2
	newinst="true"
fi

# Write app version
conf_write app-version $plaidversion


# Stack installation
[[ $setup -gt 0 && $setup -lt 4 ]] && stack -nginx
[[ $setup -gt 1 && $setup -lt 4 ]] && stack -php
[[ $setup == 3 ]] && stack -mysql
if [[ $setup == 4 ]]; then
	source /opt/gridplaid/lib/webin
	config_load
fi


# Message Center
if [[ $newinst == "true" && $setup == 0 ]]; then
	echo "${blu}You have chosen the option '0', it means that you have to manually build your own stack."
	echo "But, don't worry! With GridPlaid this is an easy task, just use the stack command, i.e. 'sudo stack -lemp'"
	echo "${gre}"
	echo "GridPlaid has been successfully installed!!!"
fi

# Remove Installation File
sudo rm plaid
app_purge
